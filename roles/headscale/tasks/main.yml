---
- name: Assert supported OS
  ansible.builtin.assert:
    that:
      - ansible_distribution in ['Ubuntu', 'Debian']
      - ansible_distribution_release in ['focal', 'jammy', 'bullseye']
    success_msg: "Supported OS detected: {{ ansible_distribution }} {{ ansible_distribution_release }}"
    fail_msg: "Unsupported OS detected: {{ ansible_distribution }} {{ ansible_distribution_release }}"

- name: APT cache update
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Create user
  ansible.builtin.user:
    name: "{{ headscale_user }}"
    shell: /bin/false
    system: true
    createhome: false
    home: "{{ headscale_statedir }}"
    state: present

- name: Create group
  ansible.builtin.group:
    name: "{{ headscale_group }}"
    system: true
    state: present

- name: Ensure user belongs to group
  ansible.builtin.user:
    name: "{{ headscale_user }}"
    groups: "{{ headscale_group }}"
    append: true
    state: present

- name: Download binary
  ansible.builtin.get_url:
    url: "{{ headscale_url }}"
    checksum: "{{ headscale_checksum }}"
    dest: "{{ headscale_binary }}"
    mode: 0755
    owner: root
    group: root

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ headscale_user }}"
    group: "{{ headscale_group }}"
    mode: 0750
  loop:
    - "{{ headscale_confdir }}"
    - "{{ headscale_rundir }}"
    - "{{ headscale_statedir }}"

- name: Create config
  ansible.builtin.template:
    src: headscale.yaml.j2
    dest: "{{ headscale_config }}"
    owner: "{{ headscale_user }}"
    group: "{{ headscale_group }}"
    mode: 0640
  register: headscale_state_config

- name: Check config
  ansible.builtin.command: >
    {{ headscale_binary }}
    --config {{ headscale_config }}
    configtest
  become: true
  become_user: "{{ headscale_user }}"
  changed_when: false
  when: headscale_state_config is changed

- name: Create service
  ansible.builtin.template:
    src: headscale.service.j2
    dest: /usr/lib/systemd/system/headscale.service
    owner: root
    group: root
    mode: 0644
  register: headscale_state_systemd_service

- name: Enable service
  ansible.builtin.systemd:
    name: headscale
    enabled: true
    daemon_reload: "{{ headscale_state_systemd_service.changed }}"

- name: Start service
  ansible.builtin.systemd:
    name: headscale
    state: "{{ headscale_state_systemd_service.changed | ternary('restarted', 'started') }}"
